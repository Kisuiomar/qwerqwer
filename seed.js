import mongoose from 'mongoose';
import bcrypt from 'bcryptjs';
import dotenv from 'dotenv';
import User from './models/User.js';
import Post from './models/Post.js';

dotenv.config();
const MONGO_URI = process.env.MONGO_URI;

async function seedDatabase() {
  try {
    await mongoose.connect(MONGO_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    await User.deleteMany();
    await Post.deleteMany();
    console.log('üóëÔ∏è –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');

    const hashedPassword = await bcrypt.hash('password123', 10);
    const user = await User.create({ 
      fullName: 'Omar Zhumabay', 
      username: 'omar', 
      email: 'omar@example.com', 
      passwordHash: hashedPassword 
    });
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');

    const post = await Post.create({
      title: '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫',
      text: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç',
      user: user._id,
      tags: ['—Ç–µ—Å—Ç', 'mongoose', 'seed'],
      viewsCount: 0,
      imageUrl: '',
      createdAt: new Date()
    });
    console.log('üìù –ü–æ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω');

    console.log('üöÄ Seed —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω');
    process.exit();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏:', error);
    process.exit(1);
  }
}

seedDatabase();
